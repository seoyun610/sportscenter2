<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.project.sportscenter.pay.PayMapper"> 
	<sql id="searchSql">
		<where>
			<choose>
				<when test="payid != null and payid != ''">
					AND payid = #{payid}
				</when>
			</choose>
			<choose>
				<when test="classid != null and classid != ''">
					AND classid = #{classid}
				</when>
			</choose>
			<choose>
				<when test="usernum != null and usernum != ''">
					AND usernum = #{usernum}
				</when>
			</choose>
			<choose>
				<when test="paystate != null and paystate != ''">
					AND paystate = #{paystate}
				</when>
			</choose>
			<choose>
				<when test="cancelstate != null and cancelstate != ''">
					AND cancelstate = #{cancelstate}
				</when>
			</choose>
			<choose>
				<when test="refundstate != null and refundstate != ''">
					AND refundstate = #{refundstate}
				</when>
			</choose>
			<choose>
				<when test="paymethod != null and paymethod != ''">
					AND paymethod = #{paymethod}
				</when>
			</choose>
			<choose>
				<when test="imp_uid != null and imp_uid != ''">
					AND imp_uid = #{imp_uid}
				</when>
			</choose>
		</where>
	</sql>

	<sql id="simpleSearch">
		<where>
			<choose>
				<when test="payid != null and payid != ''">
					AND payid = #{payid}
				</when>
			</choose>
			<choose>
				<when test="classid != null and classid != ''">
					AND classid = #{classid}
				</when>
			</choose>
			<choose>
				<when test="usernum != null and usernum != ''">
					AND usernum = #{usernum}
				</when>
			</choose>
			<choose>
				<when test="paystate != null and paystate != ''">
					AND paystate = #{paystate}
				</when>
			</choose>
			<choose>
				<when test="cancelstate != null and cancelstate != ''">
					AND cancelstate = #{cancelstate}
				</when>
			</choose>
			<choose>
				<when test="refundstate != null and refundstate != ''">
					AND refundstate = #{refundstate}
				</when>
			</choose>
		</where>
	</sql>

	<insert id="addAll" parameterType="java.util.List">
		INSERT INTO pay (
			classid, usernum, paystate, cancelstate, refundstate, price
		) VALUES 
			<foreach collection="list" item="item" separator=",">
				(#{item.classid}, #{item.usernum}, #{item.paystate}
				, #{item.cancelstate}, #{item.refundstate}, #{item.price})
			</foreach>
	</insert>

	<!-- 조회 -->
	<select id="list" parameterType="kr.project.sportscenter.pay.PayVO" resultType="kr.project.sportscenter.pay.PayVO">
		SELECT * 
		FROM pay
		<include refid="searchSql"/>
		ORDER BY payid DESC
		LIMIT #{startIdx}, 10
	</select>
	<!-- 조회 -->
	<select id="list2" parameterType="kr.project.sportscenter.pay.PayVO" resultType="kr.project.sportscenter.pay.PayVO">
		SELECT * 
		FROM pay
		<include refid="simpleSearch"/>
	</select>
	<!-- 등록 -->
	<insert id="regist" parameterType="kr.project.sportscenter.pay.PayVO">
		INSERT INTO pay(
			classid, usernum, paystate, price, paymethod, imp_uid
		) VALUES (
			#{classid}, #{usernum}, 1, #{price}, 'card', #{imp_uid}
		)
	</insert>
	
	<!-- 존재 -->
	<select id="exists" parameterType="kr.project.sportscenter.pay.PayVO" resultType="int">
		SELECT COUNT(*) FROM pay WHERE classid=#{classid} AND usernum={usernum}
	</select>
	
	<!-- 업데이트 -->
	<update id="update" parameterType="kr.project.sportscenter.pay.PayVO">
		UPDATE pay
		<set>
			paymethod = 'card'
			<if test="paystate != null and paystate != ''">
				, paystate = #{paystate}
			</if>
			<if test="cancelstate != null and cancelstate != ''">
				, cancelstate = #{cancelstate}
			</if>
			<if test="refundstate != null and refundstate != ''">
				, refundstate = #{refundstate}
			</if>
			<if test="imp_uid != null and imp_uid != ''">
				, imp_uid = #{imp_uid}
			</if>
			<where>
				<choose>
					<when test="payid != null and payid != ''">
						AND payid = #{payid}
					</when>
				</choose>
			</where> 
		</set>
	</update>
	
	<select id="courseList" parameterType="kr.project.sportscenter.pay.PayVO" resultType="kr.project.sportscenter.pay.PayVO"> 
		SELECT u.username as username, 
                c.classyear as classyear, c.classmonth as classmonth, c.classlevel as classlevel, c.classtime as classtime, c.subtype as subtype, c.classday as classday,
                p.paystate as paystate , p.refundstate  as refundstate, payid
        FROM pay p 
            JOIN user u ON p.usernum = u.usernum 
            JOIN class c ON p.classid = c.classid 
			<if test="searchWord != null and searchWord != ''">
				WHERE AND p.usernum = (SELECT usernum FROM user WHERE username LIKE '%${searchWord}%')
			</if>
		ORDER BY payid DESC
		LIMIT #{startIdx}, 10
	</select>

	<!-- 카운트 -->
	<select id="count" parameterType="kr.project.sportscenter.pay.PayVO" resultType="int">
		SELECT count(*)
		FROM pay
		<if test="searchWord != null and searchWord != ''">
			WHERE usernum = (SELECT usernum FROM user WHERE username LIKE '%${searchWord}%')
		</if>
	</select>
	
	<!-- 업데이트 -->
	<update id="courseModify" parameterType="kr.project.sportscenter.pay.PayVO">
		UPDATE pay 
		SET classid=#{classid}
		WHERE payid=#{payid}	
	</update>
	
	<!-- 과정 목록 -->
	<select id="clist" parameterType="kr.project.sportscenter.pay.PayVO" resultType="kr.project.sportscenter.pay.PayVO">
		SELECT * 
		FROM pay
		WHERE payid=${payid}
	</select>
	
	<select id="selectThisMonth" parameterType="kr.project.sportscenter.pay.PayVO" resultType="kr.project.sportscenter.pay.PayVO">
		SELECT *
		FROM pay
		WHERE paystate = 1 and cancelstate = 0 and refundstate = 0 and 
		classid in (
			SELECT classid
			FROM class
			WHERE classmonth = #{classmonth}
		)
	</select>
	
	<insert id="offregist" parameterType="kr.project.sportscenter.pay.PayVO">
	    INSERT INTO pay (classid, usernum, paystate, price, paymethod)
	    VALUES (#{classid},#{usernum},1,${price},"현장등록");
	</insert> 
	
</mapper>